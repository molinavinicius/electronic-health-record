swagger: "2.0"

paths:
  /patients:
    get:
      tags:
        - "Patient"
      summary: "Get All Patients"
      description: "Retrieve a list of all patients"
      responses:
        "200":
          description: Successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/Patient"
          examples:
            application/json:
              [
                {
                  "id": 1,
                  "name": "John Doe",
                  "phone": "(555) 123-4567",
                  "email": "johndoe@example.com",
                  "birthDate": "1990-05-10",
                  "gender": "male",
                  "height": 180,
                  "weight": 75,
                },
                {
                  "id": 2,
                  "name": "Jane Smith",
                  "phone": "(555) 987-6543",
                  "email": "janesmith@example.com",
                  "birthDate": "1992-11-15",
                  "gender": "female",
                  "height": 150,
                  "weight": 50,
                },
              ]
        "401":
          description: User unauthorized

    post:
      tags:
        - "Patient"
      summary: "Create patient"
      description: "Create a new patient"
      parameters:
        - in: "body"
          name: "body"
          description: "New patient data"
          required: true
          schema:
            $ref: "#/definitions/Patient"
      responses:
        "200":
          description: Successful response, new patient has been created
        "400":
          description: Invalid input data
        "401":
          description: User unauthorized

  /patients/{id}:
    get:
      tags:
        - "Patient"
      summary: "Get Single Patient"
      description: "Retrieve a single patient by id"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "integer"
          format: "int64"
          description: "Patient Id"
      responses:
        "200":
          description: Successful response, returning the patient's information
        "401":
          description: User unauthorized
        "404":
          description: Patient not found

    put:
      tags:
        - "Patient"
      summary: "Update patient"
      description: "Update an existing patient"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "integer"
          format: "int64"
          description: "Patient Id"
        - in: "body"
          name: "body"
          description: "Patient data to update"
          required: true
          schema:
            $ref: "#/definitions/Patient"
      responses:
        "200":
          description: Successful response, patient updated
        "400":
          description: Invalid input data
        "401":
          description: User unauthorized
        "404":
          description: Patient not found

    delete:
      tags:
        - "Patient"
      summary: "Delete patient"
      description: "Delete an existing patient"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "integer"
          format: "int64"
          description: "Patient Id"
      responses:
        "200":
          description: Successful response, patient deleted
        "401":
          description: User unauthorized
        "404":
          description: Patient not found

definitions:
  Patient:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "John Doe"
      phone:
        type: "string"
        example: "(555) 123-4567"
      email:
        type: "string"
        example: "johndoe@example.com"
      birthDate:
        type: "string"
        format: "date"
        example: "1990-05-10"
      gender:
        type: "string"
        enum: ["male", "female"]
      height:
        type: "integer"
        format: "int64"
      weight:
        type: "integer"
        format: "int64"
